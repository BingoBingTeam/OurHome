import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.lotus.ourhome"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    //add signingConfigs start
    signingConfigs{
        appkey{
            keyAlias 'ourhome_01'
            keyPassword 'ourhome20200312'
            storeFile file(project.getProjectDir().getAbsolutePath() + '/OurHome.jks')
            storePassword 'ourhome20200312'
        }
    }
    //add signingConfigs end
    buildTypes {
        //mod signingConfigs start
        release {
            minifyEnabled false
            shrinkResources false //清除不必要的资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "OurHome-${buildType.name}-${defaultConfig.versionName}-${getTime()}.apk"
                }
            }
            signingConfig signingConfigs.appkey
        }
        debug {
            signingConfig signingConfigs.appkey
        }
        //mod signingConfigs end
    }
    //添加完之后sync下会自动生成jniLibs目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    //添加一个本地仓库，并把libs目录作为仓库的地址
    repositories {
        flatDir {
            dirs 'libs'
        }
        mavenCentral()
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    //一个文件在jar包中出现多次
    packagingOptions {
        exclude 'META-INF/ASL2.0'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//add get time start
static def getTime() {
    return new SimpleDateFormat("yyyyMMddHHmm").format(new Date())
}
//add get time end

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.1.0'

    //base
    implementation 'androidx.cardview:cardview:1.0.0'//cardview
    implementation 'androidx.recyclerview:recyclerview:1.1.0'//recyclerview

    //rxjava2
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'

    //network
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'//retrofit2
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.13.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.13.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'//glide
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.8.0"
    implementation 'jp.wasabeef:glide-transformations:1.2.1'
    implementation 'org.jsoup:jsoup:1.10.1'

    //di
    implementation 'com.google.dagger:dagger:2.21'//dagger
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    implementation 'com.jakewharton:butterknife:8.2.1'//butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.2.1'
    //org.glassfish:javax.annotation:10.0-b28

    //other
    implementation 'androidx.multidex:multidex:2.0.1'//multidex
    implementation 'com.orhanobut:logger:1.15'

    //fragmentation
    implementation 'me.yokeyword:fragmentationx:1.0.2'
    implementation 'me.yokeyword:fragmentationx-swipeback:1.0.2'
  //  implementation 'me.yokeyword:eventbus-activity-scope:1.1.0'// Activity作用域的EventBus，更安全，可有效避免after onSavenInstanceState()异常
    implementation 'org.greenrobot:eventbus:3.2.0'//eventbus

    //blockcanary 进行卡顿监控和提示的话，可以这么用
    debugImplementation 'com.letv.sarrsdesktop:BlockCanaryExJRT:0.9.9.4'
    releaseImplementation 'com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:0.9.9.4'
    testImplementation 'com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:0.9.9.4'

    //ui
 //   implementation 'com.github.f0ris.sweetalert:library:1.5.1'//对话框implementation 'cn.pedant.sweetalert:library:1.3'//sweetalert
    implementation 'cn.bingoogolapple:bga-banner:2.2.6@aar'//bga-banner
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'//刷新控件
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'//androidx官方刷新控件
    implementation 'com.contrarywind:Android-PickerView:4.1.9'//时间选择控件
    implementation "com.github.chrisbanes:PhotoView:2.3.0"//图片展示控件
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'//图表库
    implementation project(path: ':res-pagerindicator')
    implementation project(path: ':opengallery')
    implementation project(path: ':res-sweetalertdialog')
    implementation project(path: ':res_base')

}
